@model freshproject1.Models.LINUX
<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="~/css file/linux.css" />
    <script src="jquery-3.5.0.min.js"></script>

    @*<script>
            $(document).ready(function () {
                // Get value on keyup funtion
                $("#theory, #practical").keyup(function () {

                    var total = 0;
                    var x = Number($("#theory").val());
                    var y = Number($("#practical").val());
                    var total = x + y;

                    $('#total').val(total);

                });
            });
        </script>*@
    <script>

        function rePercant() {
            var num1 = parseInt(document.getElementById("THEORY").value);
            var num2 = parseInt(document.getElementById("PRACTICAL").value);

            document.getElementById("G_TOTAL").value = (num1 + num2);

        }

    </script>
    <script>

        function Percant() {
            var num1 = parseInt(document.getElementById("THEORY").value);
            var num2 = parseInt(document.getElementById("PRACTICAL").value);

            document.getElementById("G_TOTAL").value = (num1 + num2/100)*100;

        }

    </script>

</head>
<body>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
       

        <div class="table">
            <div>
                <button style="background-color:blue">@Html.ActionLink("Back to List", "Index")</button>
            </div>
            <h4 style="text-align:center;color:black">LINUX RESULT</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="background-color:cadetblue">
                @Html.LabelFor(model => model.REGNO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.REGNO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.REGNO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RANK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="background-color:cadetblue">
                    @Html.EditorFor(model => model.RANK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RANK, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="background-color:cadetblue">
                @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UNIT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="background-color:cadetblue">
                    @Html.EditorFor(model => model.UNIT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UNIT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.THEORY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="theory" class="col-md-10">
                    @Html.EditorFor(model => model.THEORY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.THEORY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="background-color:cadetblue">
                @Html.LabelFor(model => model.PRACTICAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="practical" class="col-md-10" style="background-color:cadetblue">
                    @Html.EditorFor(model => model.PRACTICAL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PRACTICAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.G_TOTAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="total" class="col-md-10">

                    <input type="text" id="G_TOTAL" name="G_TOTAL" onblur="rePercant()">
                    @*@Html.ValidationMessageFor(model => model.G_TOTAL, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group" style="background-color:cadetblue">
                @Html.LabelFor(model => model.GRADING, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="background-color:cadetblue">
                    @Html.EditorFor(model => model.GRADING, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GRADING, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="background-color:cadetblue">
                @Html.LabelFor(model => model.REMARKS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.REMARKS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BATCHRANK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="background-color:cadetblue">
                    @Html.EditorFor(model => model.BATCHRANK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BATCHRANK, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input style="background-color:forestgreen" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }


</body>
</html>
